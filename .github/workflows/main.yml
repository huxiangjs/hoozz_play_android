name: Android CI

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for the release'
        required: false
        default: 'latest'
      branch:
        description: 'Branch to build'
        required: true
        default: 'master'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    # Checkout the repository to the GitHub Actions runner
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    # Set up Java environment
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: '17'

    # Get Flutter SDK
    - name: Install Flutter SDK with Cache
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.7'
        channel: 'stable'
        cache: true
        cache-key: ${{ runner.os }}-flutter-sdk-${{ hashFiles('**/pubspec.lock') }}

    # Cache Gradle
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          .dart_tool
          .packages
          .pub-cache
          ~/.gradle
        key: ${{ runner.os }}-flutter-env-${{ hashFiles('**/pubspec.lock') }}-${{ hashFiles('**/build.gradle') }}
        restore-keys: |
          ${{ runner.os }}-flutter-env-

    # Install dependencies
    - name: Install dependencies
      run: flutter pub get

    # Run Android build command
    - name: Build APK
      run: flutter build apk --release

    # Optionally upload the built APK as an artifact of the workflow
    - name: Upload APK as artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: build/app/outputs/flutter-apk/app-release.apk

    # Check tag
    - name: Check if the event is a tag push
      id: check_tag_push
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo "Is tag push"
          echo "IS_TAG_PUSH=true" >> $GITHUB_OUTPUT
        else
          echo "IS_TAG_PUSH=false" >> $GITHUB_OUTPUT
        fi

    # Create release
    - name: Create Release
      if: steps.check_tag_push.outputs.IS_TAG_PUSH == 'true'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    # Upload APK to release
    - name: Upload Release Asset
      if: steps.check_tag_push.outputs.IS_TAG_PUSH == 'true'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-release.apk
        asset_name: hoozz_play_release_${{ github.ref_name }}.apk
        asset_content_type: application/vnd.android.package-archive
